package gov.nasa.jpl.clipper.uvs.calibration;


import gov.nasa.jpl.aerie.merlinsk.ActivityDefinition;
import gov.nasa.jpl.aerie.merlinsk.ActivityParameterDefinition;
import gov.nasa.jpl.aerie.merlinsk.BasicParameters;
import gov.nasa.jpl.aerie.merlinsk.Duration;

/**
 * static factory class used to construct bright star stare activity definition
 */
public class BrightStarStare_v2_7_1 {
  /**
   * construct an activity definition for a bright star stare uvs calibration
   *
   * @return activity definition for bright star stare
   */
  static ActivityDefinition build() {
    new actDef = new ActivityDefinition();

    /*metadata*/
    General.applyMetadata( actDef );
    actDef.setName( "UvsBrightStarStareCal" );
    actDef.setVersion( "2.7.1" );
    actDef.addLabels( "bss" );
    actDef.setBrief( "calibrate the uvs via long exposure to a bright star" );
    actDef.setDocumentation(
      "points the uvs at a well-characterized star that is bright in the "
      +"the ultraviolet and then observes it using both the airglow and "
      +"high-resolution ports in turn in order to ascertain ongoing detector "
      +"degredation and the optics point spread function.\n"
      +"should occur several times throughout the mission, including tour"
      );
    actDef.addReferences( 
      "https://github.jpl.nasa.gov/Europa/OPS/blob/clipper-develop/seq/aaf/Clipper/Instruments/UVS_activities.aaf#L541"
      );
    
    /*parameters*/
    { ActivityParameterDefinition pDef = CelestialCoordinates.build();
      pDef.setName( "target" );
      pDef.setBrief( "coordinates of the calibration target to use" );
      pDef.setDocumentation(
        "points to the star that the uvs should point at during each calibration"
        );
      actDef.addParameter( pDef );
    }
    
    { ActivityParameterDefinition pDef = BasicParameters.buildDuration();
      pDef.setName( "highResolutionPortDuration" );
      pDef.setDefaultValue( 1 * Duration.Hour );
      pDef.setBrief( "exposure time for high-resolution port calibration stare" );
      pDef.setDocumentation( 
        "the duration that the uvs should collect high-resolution photon data "
        +" for while the high-resolution port is pointed at the selected bright "
        +" star"
        );
    }

    { ActivityParameterDefinition pDef = BasicParameters.buildDataVolume();
      pDef.setName( "highResolutionPortData" );
      pDef.setDefaultValue( 100 * DataVolume.Megabit );
      pDef.setBrief( "anticipated data volume of high-resolution calibration" );
      pDef.setDocumentation( 
        "the maximum-liklihood expectation of the data volume generated by the "
        +" high-resolution calibration observation"
        );
    }

    { ActivityParameterDefinition pDef = BasicParameters.buildDuration();
      pDef.setName( "airGlowPortDuration" );
      pDef.setDefaultValue( 1 * Duration.Hour );
      pDef.setBrief( "exposure time for air-glow port calibration stare" );
      pDef.setDocumentation( 
        "the duration that the uvs should collect air-glow photon data for while "
        +" the air-glow port is pointed at the selected bright star"
        );
    }
     
    { ActivityParameterDefinition pDef = BasicParameters.buildDataVolume();
      pDef.setName( "airGlowPortData" );
      pDef.setDefaultValue( 200 * DataVolume.Megabit );
      pDef.setBrief( "anticipated data volume of air-glow calibration" );
      pDef.setDocumentation( 
        "the maximum-liklihood expectation of the data volume generated by the "
        +" air-glow calibration observation"
        );
    }
    
    return actDef;
  }
  
}

#!/bin/bash
# ---------------------------------------------------------------------------
# license-headers - Add and update license headers in files
#
# Usage: license-headers [-h|--help] [-d|--dry-run] [-u|--update] [-l|--license path] [-e|--ext extension] [-s|--search pattern]
#
# Revision history:
# 2018-09-12 Created by new_script ver. 3.3
# ---------------------------------------------------------------------------

PROGNAME=${0##*/}
VERSION="0.1"

clean_up() { # Perform pre-exit housekeeping
  return
}

error_exit() {
  echo -e "${PROGNAME}: ${1:-"Unknown Error"}" >&2
  clean_up
  exit 1
}

graceful_exit() {
  clean_up
  exit
}

signal_exit() { # Handle trapped signals
  case $1 in
    INT)
      error_exit "Program interrupted by user" ;;
    TERM)
      echo -e "\n$PROGNAME: Program terminated" >&2
      graceful_exit ;;
    *)
      error_exit "$PROGNAME: Terminating on unknown signal" ;;
  esac
}

usage() {
  echo -e "Usage: $PROGNAME [-h|--help] [-d|--dry-run] [-u|--update] [-l|--license path] [-e|--ext extension] [-s|--search pattern]"
}

help_message() {
  cat <<- _EOF_
  $PROGNAME ver. $VERSION
  Add and update license headers in files

  $(usage)

  Options:
  -h, --help  Display this help message and exit.
  -d, --dry-run  Dry run
  -u, --update  Update existing
  -l, --license path  License file
    Where 'path' is the Path to license file.
  -e, --ext extension  File extension to check
    Where 'extension' is the extension of files to find
  -s, --search pattern License search pattern
    Where 'pattern' is a grep expression used to find the license header.

_EOF_
  return
}

# Trap signals
trap "signal_exit TERM" TERM HUP
trap "signal_exit INT"  INT



# Parse command-line
while [[ -n $1 ]]; do
  case $1 in
    -h | --help)
      help_message; graceful_exit ;;
    -d | --dry-run)
      dry_run="1" ;;
    -u | --update)
      update="1" ;;
    -l | --license)
      shift; license_path="$1" ;;
    -e | --ext)
      shift; extension="$1" ;;
    -s | --search)
      shift; search_pattern="$1" ;;
    -* | --*)
      usage
      error_exit "Unknown option $1" ;;
    *)
      working_dir="$1" ;;
  esac
  shift
done

for i in $(find $working_dir -type f -name "*.$extension")
do
  if ! grep -q "$search_pattern" $i
  then
    echo "$i"

    if [ -z "$dry_run" ]; then
      cat $license_path $i >$i.new && mv $i.new $i
    else
      $files_missing_headers=1
    fi

  fi
done

if [ ! -z ${files_missing_headers}]
then
  error_exit "license header check failed"
fi

graceful_exit


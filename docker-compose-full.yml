version: "3.3"
services:
  # Core services
  adaptation:
    image: "${DOCKER_URL}/adaptation:${DOCKER_TAG}"
    ports: ["27182:27182"]
    depends_on: ["adaptation_mongo"]
    volumes:
      - adaptation_files:/usr/src/app/adaptation_files
      - adaptation_logs:/var/log/adaptation
  adaptation_mongo:
    command: ["mongod", "--port", "27020", "--smallfiles"]
    image: mongo:3.2
    ports: ["27020:27020"]
    volumes: ["adaptation_mongo_data:/data/db"]
  nest:
    image: "${DOCKER_URL}/nest:${DOCKER_TAG}"
    ports: ["8080:80"]
  plan:
    image: "${DOCKER_URL}/plan:${DOCKER_TAG}"
    command: ["--spring.profiles.active=production"]
    depends_on: ["plan_mongo"]
    ports: ["27183:27183"]
    restart: always
    volumes: ["plan_logs:/var/log/plan"]
  plan_mongo:
    command: ["mongod", "--port", "27018", "--smallfiles"]
    image: mongo:3.2
    ports: ["27018:27018"]
    volumes: ["plan_mongo_data:/data/db"]

  # Message queue, for RabbitMQ a hostname must be specified so that data isn't
  # assigned to a random directory
  rabbitmq:
    image: rabbitmq:3
    ports: ["5672:5672"]
    volumes: ["rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq"]

  # API gateway
  tyk_gateway:
    image: tykio/tyk-gateway:latest
    ports: ["8081:8080"]
    depends_on: ["tyk_redis"]
    restart: always
    volumes:
      - ./tyk_gateway/tyk_gateway_dashboard.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk_gateway/apps:/opt/tyk-gateway/apps
  tyk_redis:
    image: redis
    ports: ["6379:6379"]
    volumes: ["tyk_redis_data:/data"]

  # API gateway dashboard (optional)
  tyk_dashboard:
    image: tykio/tyk-dashboard:latest
    ports:
      - "3000:3000"
      - "5000:5000"
    depends_on:
      - tyk_redis
      - tyk_mongo
    restart: always
    volumes:
      [
        "./tyk_dashboard/tyk_dashboard.conf:/opt/tyk-dashboard/tyk_analytics.conf",
      ]
  tyk_pump:
    image: tykio/tyk-pump-docker-pub:latest
    depends_on:
      - tyk_redis
      - tyk_mongo
      - tyk_gateway
    restart: always
    volumes: ["./tyk_pump/tyk_pump.conf:/opt/tyk-pump/pump.conf"]
  tyk_mongo:
    image: mongo:3.2
    command: ["mongod", "--smallfiles"]
    ports: ["27017:27017"]
    volumes: ["tyk_mongo_data:/data/db"]

  # Analytics
  matomo:
    image: matomo
    ports: ["31423:80"]
    volumes:
      - ./analytics/config.ini.php:/var/www/html/config/config.ini.php
      - matomo_app:/matomo
    depends_on: ["matomo_database"]
  matomo_database:
    image: mariadb
    ports: ["3306:3306"]
    env_file: ./analytics/analytics.env
    volumes: ["matomo_data:/var/lib/mysql"]

  # Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.0
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks: ["elk"]
  kibana:
    image: docker.elastic.co/kibana/kibana:6.0.0
    volumes: ["./kibana/:/usr/share/kibana/config"]
    ports: ["5601:5601"]
    depends_on: ["elasticsearch"]
    restart: always
    networks: ["elk"]
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.0.0
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - adaptation_logs:/usr/share/logs/adaptation
    depends_on:
      - elasticsearch
      - kibana
    restart: always
    networks: ["elk"]

networks:
  elk:
    driver: bridge

volumes:
  adaptation_files:
  adaptation_logs:
  adaptation_mongo:
  elasticsearch_data:
  matomo_app:
  matomo_data:
  plan_logs:
  plan_mongo_data:
  rabbitmq_data:
  tyk_mongo_data:
  tyk_redis_data:

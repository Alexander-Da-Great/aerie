pipeline {

	agent {
		label 'coronado || Pismo || San-clemente || Sugarloaf'
	}

	stages {

		stage ('build and analyze') {
			steps {
				script {
					def statusCode = sh returnStatus: true, script:
					'''
						# don't echo commands by default
						set +x

						# setup env
						export BRANCH_NAME="${GIT_BRANCH#origin/}"
						export BUILD_DATE=`date +%Y%m%d`
						export REPO_REV_SHORT=`git rev-parse --short HEAD`
						# remove forward slash and release from branch name
						export BRANCH_VERSION=`echo ${BRANCH_NAME} | sed -e 's/\\//_/g' -e 's/^release_//g'`
						export SEQBASETAG="${BRANCH_VERSION}+b${BUILD_NUMBER}.r${REPO_REV_SHORT}.${BUILD_DATE}"

						# setup nvm/node
						export NVM_DIR="\$HOME/.nvm"
						if [ ! -d \$NVM_DIR ]; then
							curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
						fi
						[ -s "\$NVM_DIR/nvm.sh" ] && . "\$NVM_DIR/nvm.sh"
						nvm install v10.13.0
						# install typescript
						npm install typescript
						export NODE_PATH="`pwd`/node_modules"

						# setup env for Semmle
						export SEMMLE_DIR="/home/seqbamboo/semmle/odasa-1.18.0"
						export SEMMLE_PROJ="aerie_node"

						echo -e "\ncurrent environment variables:\n"
						env | sort

						# run semmle script
						$SEMMLE_DIR/queries/suites/security/run_semmle_javascript.sh "$SEMMLE_PROJ" "`pwd`"

						# copy generated semmle files to current dir
						cp cwe_output/*.csv ${SEMMLE_PROJ}-semmle-cwe_output-${SEQBASETAG}.csv
						cp JPLTop25_output/*.csv ${SEMMLE_PROJ}-semmle-JPLTop25_output-${SEQBASETAG}.csv
					'''
					if (statusCode > 0) {
						error "Build failure detected. See log."
					}
				}
			}
		}

		stage ('publish') {
			steps {
				echo "Archiving artifacts in Jenkins..."
				archiveArtifacts '*.csv'
			}
		}

	}

	post {

		success {
			emailext subject: "Semmle scan: ${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
			body: """
				<p>Semmle scan results for Aerie Node components are now available: <br> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} #${env.BUILD_NUMBER}</a></p>
			""",
			mimeType: 'text/html',
			to: 'seq.scan@jpl.nasa.gov'
		}

		unstable {
			emailext subject: "Jenkins UNSTABLE: ${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
			body: """
				<p>Jenkins job unstable (failed tests): <br> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} #${env.BUILD_NUMBER}</a></p>
			""",
			mimeType: 'text/html',
			recipientProviders: [[$class: 'FailingTestSuspectsRecipientProvider']]
		}

		failure {
			emailext subject: "Jenkins FAILURE: ${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
			body: """
				<p>Jenkins job failure: <br> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} #${env.BUILD_NUMBER}</a></p>
			""",
			mimeType: 'text/html',
			recipientProviders: [[$class: 'CulpritsRecipientProvider']]
		}
	}

}
